plugins {
    id 'java'
    id 'jacoco'
    id 'checkstyle'
    id 'com.github.sherter.google-java-format'
    id("maven-publish")
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'junit:junit:4.13'
}

test {
    useJUnit()
    finalizedBy jacocoTestReport // report is always generated after tests run
}
check {
    checkstyle
}

check.dependsOn jacocoTestCoverageVerification

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

task format {
    dependsOn tasks.googleJavaFormat
}

task installGitHooks(type: Copy) {
    from file("$rootDir/config/hooks")
    into file("$rootDir/.git/hooks")
    fileMode 8777
}
build.dependsOn(tasks.googleJavaFormat)
build.dependsOn(tasks.format)

jacoco {
    toolVersion = "0.8.6"
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}


jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                minimum = 0.8
            }
        }
    }
}

build.dependsOn(jacocoTestReport)


//checkstyle {
//    toolVersion = '8.42'
//    configFile = file("${rootDir}/static-code-analysis/checkstyle/checkstyle.xml")
//}
checkstyle {
    toolVersion "8.41.1"
    configFile file("${rootDir}/static-code-analysis/checkstyle/checkstyle.xml")
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/matiasferron/printScript")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}
